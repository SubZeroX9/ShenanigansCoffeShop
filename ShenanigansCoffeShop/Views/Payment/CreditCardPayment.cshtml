
@using ShenanigansCoffeShop.Models
@model ShenanigansCoffeShop.Models.UserModel
<br />
<br />
<div class="container h-100">
    <div class="row d-flex justify-content-center align-items-center h-100">
        <div class="col-lg-12 col-xl-11">
            <div class="card text-black" style="border-radius: 25px;">
                <div class="card-body p-md-5">
                    <div class="row justify-content-center">
                        <div class="col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1">

                            <p class="text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4" style=" font-family: Lucida Handwriting;">Payment</p>
                            <form action="CreditCardPaymentProccess" method="post" style="align-content:center;">
                                <div>@(((TotalOrderModel)Session["CurrentOrdObj"]).totalprice)₪</div>

                                <div class="form-group">
                                    @if (!ViewData.ModelState.IsValid)
                                    {
                                        <div class="text-danger p-3">
                                            @Html.ValidationMessage("Invalid Details")
                                        </div>
                                    }
                                    <label for="fname">Credit Card Number</label><br />
                                    <input type="text" id="CCN" name="CCN" placeholder="0000 0000 0000 0000" pattern="[0-9]{4} [0-9]{4} [0-9]{4} [0-9]{4}" required><br />


                                    <label for="ExpireDate"><tab />Expire Date</label><br />
                                    <input type="date" max=@ViewBag.CurrentTime id="ExpireDate" name="ExpireDate" required /><br />

                                    <label for="CVV">CVV (Security Number)</label><br />
                                    <input type="number" id="CVV" name="CVV" pattern="[0-9]{3}"><br />

                                    <label for="ID">ID Number</label><br />
                                    <input type="number" id="ID" name="ID" pattern="[0-9]{9}"><br />

                                    <label for="fname">First Name</label><br />
                                    <input type="text" id="fname" name="fname"><br />

                                    <label for="lanem">Last Name</label><br>
                                    <input type="text" id="lname" name="lanme"><br />
                                </div>

                                @Html.ViewBag.ErrorMessage
                                <br /><button type="submit" class="btn btn-dark" style="width:430px">Pay Now</button>

<br /><br />
                                <!DOCTYPE html>
                                <html>
                                <head>
                                    <meta name="viewport" content="width=device-width, initial-scale=1"> <!-- Ensures optimal rendering on mobile devices -->
                                </head>

                                <body>
                                    <!-- Include the PayPal JavaScript SDK; replace "test" with your own sandbox Business account app client ID -->
                                    <script src="https://www.paypal.com/sdk/js?client-id=test&currency=USD"></script>

                                    <!-- Set up a container element for the button -->
                                    <div id="paypal-button-container"></div>

                                    <script>
      paypal.Buttons({

        // Sets up the transaction when a payment button is clicked
        createOrder: function(data, actions) {
          return actions.order.create({
            purchase_units: [{
              amount: {
                value: '77.44' // Can reference variables or functions. Example: `value: document.getElementById('...').value`
              }
            }]
          });
        },

        // Finalize the transaction after payer approval
        onApprove: function(data, actions) {
          return actions.order.capture().then(function(orderData) {
            // Successful capture! For dev/demo purposes:
                console.log('Capture result', orderData, JSON.stringify(orderData, null, 2));
                var transaction = orderData.purchase_units[0].payments.captures[0];
                alert('Transaction '+ transaction.status + ': ' + transaction.id + '\n\nSee console for all available details');

            // When ready to go live, remove the alert and show a success message within this page. For example:
            // var element = document.getElementById('paypal-button-container');
            // element.innerHTML = '';
            // element.innerHTML = '<h3>Thank you for your payment!</h3>';
            // Or go to another URL:  actions.redirect('thank_you.html');
          });
        }
      }).render('#paypal-button-container');

                                    </script>
                                </body>
                            </html>


                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
    
<br/>
<br/>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
